name: backend

on:
  pull_request:
      types: [ opened, synchronize, reopened, ready_for_review, labeled, unlabeled ]
  push:
    branches: [ main ]

permissions:
  contents: read
  actions: read
  checks: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository 
        uses: actions/checkout@v4
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Build
        run: |
          dotnet build ./src/backend/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository 
        uses: actions/checkout@v4
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Build
        run: |
          dotnet build ./src/backend/
      - name: Test
        run: |
          dotnet test ./src/backend/ --no-build -f "net9.0" --blame-hang --blame-hang-timeout 15m -l "console;verbosity=detailed" -l "trx;LogFileName=test-results.trx"

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Test results                                 # Name of the check run which will be created
          path: src/backend/*/*.Tests/TestResults/test-results.trx   # Path to test results
          reporter: dotnet-trx                               # Format of test results

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out repository 
        uses: actions/checkout@v4
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - name: Build
        run: |
          dotnet build ./src/backend/
      - name: Test
        run: |
          dotnet test ./src/backend/ --no-build -f "net9.0" --blame-hang --blame-hang-timeout 15m --collect:"XPlat Code Coverage"

      - name: Code Coverage Report
        run: |
          find src/backend/*/*.Tests/TestResults/*/ -name 'coverage.cobertura.xml' -execdir head -n 5 {} \; -execdir echo -e '\n\n' \;
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          directory: ./src/backend/
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true 